/****************************************************/
/* txt2bas                                          */
/* p6code6.h                                        */
/* 2001.07.09. by ishioka                           */
/* 2003.05.05. by ishioka                           */
/****************************************************/

enum {
	CODE_END = 0x81,
	CODE_FOR,
	CODE_NEXT,
	CODE_DATA,
	CODE_INPUT,
	CODE_DIM,
	CODE_READ,
	CODE_LET,
	CODE_GOTO,
	CODE_RUN,
	CODE_IF,
	CODE_RESTORE,
	CODE_GOSUB,
	CODE_RETURN,
	CODE_REM,
	CODE_STOP,
	CODE_PRINT,
	CODE_CLEAR,
	CODE_LIST,
	CODE_NEW,
	CODE_ON,
	CODE_WAIT,
	CODE_DEF,
	CODE_POKE,
	CODE_CONT,
	CODE_OUT,
	CODE_LPRINT,
	CODE_LLIST,
	CODE_CONSOLE,
	CODE_WIDTH,
	CODE_ELSE,
	CODE_TRON,
	CODE_TROFF,
	CODE_SWAP,
	CODE_ERASE,
	CODE_MENU,
	CODE_ERROR,
	CODE_RESUME,
	CODE_DELETE,
	CODE_AUTO,
	CODE_RENUM,
	CODE_DEFSTR,
	CODE_DEFINT,
	CODE_DEFSNG,
	CODE_DEFDBL,
	CODE_LINE,
	CODE_WHILE,
	CODE_WEND,
	CODE_EXEC,
	CODE_LFO,
	CODE_PLAY,
	CODE_BGM,
	CODE_SOUND,
	CODE_COMMON,
	CODE_CHAIN,
	CODE_CLOAD,
	CODE_CSAVE,
	CODE_DSKO,
	CODE_OPEN,
	CODE_FIELD,
	CODE_GET,
	CODE_PUT,
	CODE_SET,
	CODE_CLOSE,
	CODE_LOAD,
	CODE_MERGE,
	CODE_FILES,
	CODE_NAME,
	CODE_KILL,
	CODE_LSET,
	CODE_RSET,
	CODE_SAVE,
	CODE_LFILES,
	CODE_MON,
	CODE_COLOR,
	CODE_CIRCLE,
	CODE_LCOPY,
	CODE_CLS,
	CODE_PSET,
	CODE_PRESET,
	CODE_PAINT,
	CODE_TERM,
	CODE_SCREEN,
	CODE_BLOAD,
	CODE_BSAVE,
	CODE_LOCATE,
	CODE_BEEP,
	CODE_ROLL,
	CODE_PALET,
	CODE_TALK,
	CODE_KANJI,
	CODE_TO,
	CODE_THEN,
	CODE_TAB,
	CODE_STEP,
	CODE_USR,
	CODE_FN,
	CODE_SPC,
	CODE_NOT,
	CODE_ERL,
	CODE_ERR,
	CODE_STRING,
	CODE_USING,
	CODE_INSTR,
	CODE_QUOTE,
	CODE_VARPTR,
	CODE_ATTR,
	CODE_DSKI,
	CODE_SRQ,
	CODE_OFF,
	CODE_INKEY,
	CODE_GT,
	CODE_EQUAL,
	CODE_LT,
	CODE_PLUS,
	CODE_MINUS,
	CODE_ASTERISK,
	CODE_SLASH,
	CODE_CARET,
	CODE_AND,
	CODE_OR,
	CODE_XOR,
	CODE_EQV,
	CODE_IMP,
	CODE_MOD,
	CODE_YEN,
    CODE_LEFT = 0xFF81,
	CODE_RIGHT,
	CODE_MID,
	CODE_SGN,
	CODE_INT,
	CODE_ABS,
	CODE_SQR,
	CODE_RND,
	CODE_SIN,
	CODE_LOG,
	CODE_EXP,
	CODE_COS,
	CODE_TAN,
	CODE_ATN,
	CODE_FRE,
	CODE_INP,
	CODE_POS,
	CODE_LEN,
	CODE_STR,
	CODE_VAL,
	CODE_ASC,
	CODE_CHR,
	CODE_PEEK,
	CODE_SPACE,
	CODE_OCT,
	CODE_HEX,
	CODE_LPOS,
	CODE_CINT,
	CODE_CSNG,
	CODE_CDBL,
	CODE_FIX,
	CODE_CVI,
	CODE_CVS,
	CODE_CVD,
	CODE_EOF,
	CODE_LOC,
	CODE_LOF,
	CODE_FPOS,
	CODE_MKI,
	CODE_MKS,
	CODE_MKD,
	CODE_STICK,
	CODE_STRIG,
	CODE_PAD,
	CODE_GRP,
    CODE_DSKF = 0xFFD0,
	CODE_VIEW,
	CODE_WINDOW,
	CODE_POINT,
	CODE_CSRLIN,
	CODE_MAP,
	CODE_SEARCH,
	CODE_MOTOR,
	CODE_PEN,
	CODE_DATE,
	CODE_COM,
	CODE_KEY,
	CODE_TIME,
    CODE_CMD = 0xFFE4
};

p6code6 p6codelist6[] = {
    { "'"		, CODE_QUOTE	},
    { "*"		, CODE_ASTERISK	},
    { "+"		, CODE_PLUS		},
    { "-"		, CODE_MINUS	},
    { "/"		, CODE_SLASH	},
    { "<"		, CODE_LT		},
    { "="		, CODE_EQUAL	},
    { ">"		, CODE_GT		},
    { "?"		, CODE_PRINT	},
    { "\\"		, CODE_YEN		},
    { "^"		, CODE_CARET	},
    { "ABS"		, CODE_ABS		},
    { "AND"		, CODE_AND		},
    { "ASC"		, CODE_ASC		},
    { "ATN"		, CODE_ATN		},
    { "ATTR$"	, CODE_ATTR		},
    { "AUTO"	, CODE_AUTO		},
    { "BEEP"	, CODE_BEEP		},
    { "BGM"		, CODE_BGM		},
    { "BLOAD"	, CODE_BLOAD	},
    { "BSAVE"	, CODE_BSAVE	},
    { "CDBL"	, CODE_CDBL		},
    { "CHAIN"	, CODE_CHAIN	},
    { "CHR$"	, CODE_CHR		},
    { "CINT"	, CODE_CINT		},
    { "CIRCLE"	, CODE_CIRCLE	},
    { "CLEAR"	, CODE_CLEAR	},
    { "CLOSE"	, CODE_CLOSE	},
    { "CLS"		, CODE_CLS		},
    { "CMD"		, CODE_CMD		},
    { "CLOAD"	, CODE_CLOAD	},
    { "COLOR"	, CODE_COLOR	},
    { "COMMON"	, CODE_COMMON	}, // attention!
    { "COM"		, CODE_COM		}, // attention!
    { "CONSOLE"	, CODE_CONSOLE	},
    { "CONT"	, CODE_CONT		},
    { "COS"		, CODE_COS		},
    { "CSAVE"	, CODE_CSAVE	},
    { "CSNG"	, CODE_CSNG		},
    { "CSRLIN"	, CODE_CSRLIN	},
    { "CVD"		, CODE_CVD		},
    { "CVI"		, CODE_CVI		},
    { "CVS"		, CODE_CVS		},
    { "DATA"	, CODE_DATA		},
    { "DATE$"	, CODE_DATE		},
    { "DEFDBL"	, CODE_DEFDBL	}, // attention!
    { "DEFINT"	, CODE_DEFINT	},
    { "DEFSNG"	, CODE_DEFSNG	},
    { "DEFSTR"	, CODE_DEFSTR	},
    { "DEF"		, CODE_DEF		}, // attention!
    { "DELETE"	, CODE_DELETE	},
    { "DIM"		, CODE_DIM		},
    { "DSKF"	, CODE_DSKF		},
    { "DSKI$"	, CODE_DSKI		},
    { "DSKO$"	, CODE_DSKO		},
    { "ELSE"	, CODE_ELSE		},
    { "END"		, CODE_END		},
    { "EOF"		, CODE_EOF		},
    { "EQV"		, CODE_EQV		},
    { "ERASE"	, CODE_ERASE	},
    { "ERL"		, CODE_ERL		},
    { "ERROR"	, CODE_ERROR	}, // attention!
    { "ERR"		, CODE_ERR		}, // attention!
    { "EXEC"	, CODE_EXEC		},
    { "EXP"		, CODE_EXP		},
    { "FIELD"	, CODE_FIELD	},
    { "FILES"	, CODE_FILES	},
    { "FIX"		, CODE_FIX		},
    { "FN"		, CODE_FN		},
    { "FOR"		, CODE_FOR		},
    { "FPOS"	, CODE_FPOS		},
    { "FRE"		, CODE_FRE		},
    { "GET"		, CODE_GET		},
    { "GO TO"	, CODE_GOTO		},
    { "GOSUB"	, CODE_GOSUB	},
    { "GOTO"	, CODE_GOTO		},
    { "GRP$"	, CODE_GRP		},
    { "HEX$"	, CODE_HEX		},
    { "IF"		, CODE_IF		},
    { "IMP"		, CODE_IMP		},
    { "INKEY$"	, CODE_INKEY	},
    { "INPUT"	, CODE_INPUT	}, // attention!
    { "INP"		, CODE_INP		}, // attention!
    { "INSTR"	, CODE_INSTR	},
    { "INT"		, CODE_INT		},
    { "KANJI"	, CODE_KANJI	},
    { "KEY"		, CODE_KEY		},
    { "KILL"	, CODE_KILL		},
    { "LCOPY"	, CODE_LCOPY	},
    { "LEFT$"	, CODE_LEFT		},
    { "LEN"		, CODE_LEN		},
    { "LET"		, CODE_LET		},
    { "LFILES"	, CODE_LFILES	},
    { "LFO"		, CODE_LFO		},
    { "LINE"	, CODE_LINE		},
    { "LIST"	, CODE_LIST		},
    { "LLIST"	, CODE_LLIST	},
    { "LOAD"	, CODE_LOAD		},
    { "LOCATE"	, CODE_LOCATE	}, // attention!
    { "LOC"		, CODE_LOC		}, // attention!
    { "LOF"		, CODE_LOF		},
    { "LOG"		, CODE_LOG		},
    { "LPOS"	, CODE_LPOS		},
    { "LPRINT"	, CODE_LPRINT	},
    { "LSET"	, CODE_LSET		},
    { "MAP"		, CODE_MAP		},
    { "MENU"	, CODE_MENU		},
    { "MERGE"	, CODE_MERGE	},
    { "MID$"	, CODE_MID		},
    { "MKD$"	, CODE_MKD		},
    { "MKI$"	, CODE_MKI		},
    { "MKS$"	, CODE_MKS		},
    { "MOD"		, CODE_MOD		},
    { "MON"		, CODE_MON		},
    { "MOTOR"	, CODE_MOTOR	},
    { "NAME"	, CODE_NAME		},
    { "NEW"		, CODE_NEW		},
    { "NEXT"	, CODE_NEXT		},
    { "NOT"		, CODE_NOT		},
    { "OCT$"	, CODE_OCT		},
    { "OFF"		, CODE_OFF		},
    { "ON"		, CODE_ON		},
    { "OPEN"	, CODE_OPEN		},
    { "OR"		, CODE_OR		},
    { "OUT"		, CODE_OUT		},
    { "PAD"		, CODE_PAD		},
    { "PAINT"	, CODE_PAINT	},
    { "PALET"	, CODE_PALET	},
    { "PEEK"	, CODE_PEEK		},
    { "PEN"		, CODE_PEN		},
    { "PLAY"	, CODE_PLAY		},
    { "POINT"	, CODE_POINT	},
    { "POKE"	, CODE_POKE		},
    { "POS"		, CODE_POS		},
    { "PRESET"	, CODE_PRESET	},
    { "PRINT"	, CODE_PRINT	},
    { "PSET"	, CODE_PSET		},
    { "PUT"		, CODE_PUT		},
    { "READ"	, CODE_READ		},
    { "REM"		, CODE_REM		},
    { "RENUM"	, CODE_RENUM	},
    { "RESTORE"	, CODE_RESTORE	},
    { "RESUME"	, CODE_RESUME	},
    { "RETURN"	, CODE_RETURN	},
    { "RIGHT$"	, CODE_RIGHT	},
    { "RND"		, CODE_RND		},
    { "ROLL"	, CODE_ROLL		},
    { "RSET"	, CODE_RSET		},
    { "RUN"		, CODE_RUN		},
    { "SAVE"	, CODE_SAVE		},
    { "SCREEN"	, CODE_SCREEN	},
    { "SEARCH"	, CODE_SEARCH	},
    { "SET"		, CODE_SET		},
    { "SGN"		, CODE_SGN		},
    { "SIN"		, CODE_SIN		},
    { "SOUND"	, CODE_SOUND	},
    { "SPACE$"	, CODE_SPACE	},
    { "SPC("	, CODE_SPC		},
    { "SQR"		, CODE_SQR		},
    { "SRQ"		, CODE_SRQ		},
    { "STEP"	, CODE_STEP		},
    { "STICK"	, CODE_STICK	},
    { "STOP"	, CODE_STOP		},
    { "STR$"	, CODE_STR		},
    { "STRIG"	, CODE_STRIG	},
    { "STRING$"	, CODE_STRING	},
    { "SWAP"	, CODE_SWAP		},
    { "TAB("	, CODE_TAB		},
    { "TALK"	, CODE_TALK		},
    { "TAN"		, CODE_TAN		},
    { "TERM"	, CODE_TERM		},
    { "THEN"	, CODE_THEN		},
    { "TIME"	, CODE_TIME		},
    { "TO"		, CODE_TO		},
    { "TROFF"	, CODE_TROFF	},
    { "TRON"	, CODE_TRON		},
    { "USING"	, CODE_USING	},
    { "USR"		, CODE_USR		},
    { "VAL"		, CODE_VAL		},
    { "VARPTR"	, CODE_VARPTR	},
    { "VIEW"	, CODE_VIEW		},
    { "WAIT"	, CODE_WAIT		},
    { "WEND"	, CODE_WEND		},
    { "WHILE"	, CODE_WHILE	},
    { "WIDTH"	, CODE_WIDTH	},
    { "WINDOW"	, CODE_WINDOW	},
    { "XOR"		, CODE_XOR		},
};
